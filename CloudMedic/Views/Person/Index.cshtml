@using System.Text
@using CloudMedic.BLL
@using Microsoft.Ajax.Utilities
@using Microsoft.AspNet.Identity.EntityFramework
@model List<CloudMedic.Models.ApplicationUser>

<h2>Patient list</h2>

@{
    if (!string.IsNullOrWhiteSpace(ViewBag.Message))
    {
        @*<div class="well">@ViewBag.Message</div>*@
    }
}

<ul>
    <li>
        @Html.ActionLink("Patient data (for rest of the world)", "Index", new { cipherdb = false })
    </li>
    <li>
        @Html.ActionLink("Patient data through CipherDB", "Index", new { cipherdb = true })
    </li>
    <li>
        @Html.ActionLink("Add 100 random patients", "Prefill", new { count = 100 })
    </li>
    @*<li>
        @Html.ActionLink("Wipe all patients(!)", "Wipeall")
    </li>*@
    @*<li>
        @Html.ActionLink("Create New", "Create")
    </li>*@
</ul>

@{
    var firstEntry = Model.FirstOrDefault();
}
@if (firstEntry != null)
{
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().FirstName))
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().DOB)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Roles)
            </th>

            @*<th></th>*@
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DOB)
                </td>
                <td>
                    @{
            var sb = new StringBuilder();
            foreach (IdentityUserRole role in item.Roles)
            {
                sb.Append(RoleManager.GetRoleName(role.RoleId));
            }
            <span>@sb.ToString()</span>
                    }
                </td>
                @*<td>
                    @Html.ActionLink("Edit", "Edit", new {id = item.Id}) |
                    @Html.ActionLink("Details", "Details", new {id = item.Id}) |
                    @Html.ActionLink("Delete", "Delete", new {id = item.Id})
                </td>*@
            </tr>
        }

    </table>
}
else
{
    <h2>Empty</h2>
}
